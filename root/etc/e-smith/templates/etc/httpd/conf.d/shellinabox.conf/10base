{ 
use esmith::DB;
use esmith::AccountsDB;
my $acc = esmith::AccountsDB->open_ro; 

my $status = $shellinaboxd{'status'} || "disabled";
    return "    # shellinabox is disabled in this VirtualHost"
           unless $status eq 'enabled';

$OUT .= qq(

###########################################################
########       shellinabox reverse proxy         ##########
############################################################


ProxyPass /${'shellinaboxd'}{Name} http://127.0.0.1:${'shellinaboxd'}{TCPPort}
ProxyPassReverse /${'shellinaboxd'}{Name} http://127.0.0.1:${'shellinaboxd'}{TCPPort}

<Location /$shellinaboxd{'Name'}>
AuthName "$shellinaboxd{'Name'}"
SSLRequireSSL
Satisfy All
order deny,allow
deny from all
);

if ($shellinaboxd{'PublicAccess'} eq 'private')
    {       
    $OUT .= "allow from  $localAccess\n";
    } 

elsif ($shellinaboxd{'PublicAccess'} eq 'public')
    {
    $OUT .= "allow from  all\n";
    }

elsif ($shellinaboxd{'PublicAccess'} eq 'IP')
    {
    my @fixedip = split(/\s+/, ($shellinaboxd{'FixedIP'} || ""));
    my $ipform ='';
    foreach (@fixedip) {
        $ipform = $ipform . ' ' . $_;
        }
    $OUT .= "allow from  $ipform\n";
    }

elsif (($shellinaboxd{'PublicAccess'} ne 'public') && ($shellinaboxd{'PublicAccess'} ne 'private'))
    {
    $OUT .= "allow from none\n";
    }


if (($shellinaboxd{'PublicAccess'} ne 'private') || ($shellinaboxd{'WebAuth'} eq 'enabled'))
    {
    $OUT .=  qq(
AuthBasicProvider external
AuthType Basic
AuthExternal pwauth
);
    my @shelluser = split(/\s+/, ($shellinaboxd{'ShellUsers'} || ""));
    my $shelluser ="admin admin\@$DomainName";
    foreach (@shelluser) {
        $shelluser = $shelluser . ' ' . $_;
        }
    $OUT .= "Require user $shelluser\n";

    }

$OUT .= "\n</Location>";	
}
