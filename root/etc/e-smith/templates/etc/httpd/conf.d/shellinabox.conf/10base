{ 
use esmith::DB;
#use esmith::ConfigDB;


my $status = $shellinaboxd{'status'} || "disabled";
    return "    # shellinabox is disabled in this VirtualHost"
           unless $status eq 'enabled';
$OUT .= qq(

###########################################################
#######       shellinabox reverse proxy         ##########
###########################################################

ProxyPass /${'shellinaboxd'}{Name} http://127.0.0.1:${'shellinaboxd'}{TCPPort}
ProxyPassReverse /${'shellinaboxd'}{Name} http://127.0.0.1:${'shellinaboxd'}{TCPPort}

#########
<Location /$shellinaboxd{'Name'}>
order deny,allow
deny from all
SSLRequireSSL
);
	if ($shellinaboxd{'PublicAccess'} eq 'local')
			{       
		      	$OUT .= "    allow from $localAccess\n";
			} 

		elsif ($shellinaboxd{'PublicAccess'} eq 'global')
			{
		      	$OUT .= "    allow from all\n";
			}
                elsif ($shellinaboxd{'PublicAccess'} eq 'IP')
                        {
                        my $fixedip = $shellinaboxd{'FixedIP'} || "";
                        $OUT .= "    allow from $fixedip\n";
                        }


#		elsif (($shellinaboxd{'PublicAccess'} ne 'global') && ($shellinaboxd{'PublicAccess'} ne 'local'))
#			{
#		      	$OUT .= "    allow from none\n";
#			}


$OUT .= qq(
AuthName "$shellinaboxd{'Name'}"
AuthBasicProvider external
AuthType Basic
AuthExternal pwauth
);

#		if (($shellinaboxd{'PublicAccess'} ne 'local') || ($shellinaboxd{'WebAuth'} eq 'enabled'))
#                        {
#                        my @users = split(",", ($shellinaboxd{ShellUsers} || "") );
#                        $OUT .= "    require user admin @users\n";
#			}

$OUT .= qq(
</Location>
#########
);
	
}

